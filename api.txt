This has a slightly different API from the course controller. The reason for this is that many tables have compound keys, and cannot be queried with a single parameter. Using a bunch of path parameters makes it hard to tell which parameter is which.

Each applicable table has an endpoint. The endpoint can be supplied query parameters to specify a single record. For example:

GET /course?courseno=1&schoolid=1

Returns the course record with a school id of 1 and a course no of 1.

DELETE /course?courseno=1&schoolid=1

Deletes this record.

POST /course

Create a new course record.

PUT /course

If there is a course record with a primary key matching the one supplied in the body, update it. Otherwise a 404 error is returned.
Since the primary key has to match the original, the columns it covers cannot be chanegd via PUT. Also, the tracking columns (created by, created date, etc.) are handled by a trigger and are thus not writable through the API.

For POST and PUT, the created by, created date, modified by, and modified date fields do not need to be supplied. Unnecessary keys are ignored.
For example, if you do:

POST /school {SchoolId: 5, SchoolName: "Deltech"}

the SchoolId field is optional, and will be ignored.